package Exception;

/**
 * 1. java异常处理机制
 *      1.1 异常在java中以类和对象的形式存在 那么一场继承机构是什么样的?
 *          我们可以使用UML图来描述一下继承结构
 *          画UML图有很多工具
 *      1.2 什么是UML? 有什么用?
 *          UML是一种观念统一的建模语言
 *          一种图标式语言(画图的)
 *          不是专门为java准备的,只要是面向对象的编程语言 都有UML
 *          一般画UML的都是软件架构师或者说是系统分析师.
 *          在UML图中可以描述类和类之间的关系 程序执行的流程,对象的状态等
 *          类似盖大楼的建筑设计师
 *
 * 有两种异常:编译异常 运行异常  所有异常都是发生在运行阶段的
 * 2. java对于异常的处理方式包括两种:
 * 例子: 我让公司损失了1000元 有两种方法
 *      第一种: 在方法声明的位置上 使用throws关键字 抛给上一级
 *          我上报给领导
 *          谁调用我 我就抛给谁
 *      第二种: 使用try... catch语句进行异常的捕捉
 *          我自己掏腰包补上
 *          这件事发生了 谁也不知道
 *      思考:
 *          异常发生了之后 如果我选择了上抛 抛给了我的调用者,调用者需要对这个异常继续处理
 *          那么调用者处理这个异常同样有两种方式
 *          如果一直不处理 那么就会一直上传 最终抛给main方法,抛给了调用者JVM JVM知道了
 *          就会直接终止程序
 *          下面的代码就不会再继续执行了
 */
public class ExceptionTest03 {
    public static void main(String[] args) {

    }
}
